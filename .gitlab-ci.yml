image: python:3.8

stages:
  - lint
  - test
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PANTS_CONFIG_FILES: "pants.ci.toml"
  GIT_COMMIT: $CI_COMMIT_SHORT_SHA

cache:
  key: shared-cache
  paths:
    - .cache/pip
    - .npm/
    - $HOME.cache/pants/setup
    - $HOME.cache/pants/named_caches
    - $HOME.cache/pants/lmdb_store

.dist-artifacts: &dist-artifacts
  after_script:
    # list files
    - find dist
  artifacts:
    expire_in: 18h
    paths:
      - dist

flake8:
  stage: lint
  before_script:
    # bootstrap pants
    - ./pants --version
  script:
    - "./pants lint ::"
  after_script:
    - python -m pip install "flake8-junit-report"
    - python -m junit_conversor "dist/lint/flake8/report.txt" "junit.xml"
  artifacts:
    reports:
      junit: junit.xml

eslint:
  stage: lint
  image: node:latest
  before_script:
    - cd app/
    - npm --cache .npm install
  script:
    - npm run lint_junit
  artifacts:
    reports:
      junit: junit.xml

pytest:
  services:
    - name: redislabs/redismod:latest
      alias: redis
  stage: test
  needs: []
  before_script:
    # Bootstrap pants
    - ./pants --version
  script:
    - "./pants test ::"
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: always
    reports:
      junit: dist/coverage/python/coverage.xml

package:
  stage: build
  only:
    - main
  before_script:
    - apt-get -qy update
    - apt-get install -qy docker
    - ./pants --version
  script:
    - "./pants package Dockerfile"
