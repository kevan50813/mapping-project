image: python:3.8

stages:
  - lint
  - test
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PANTS_CONFIG_FILES: "pants.ci.toml"
  GIT_COMMIT: $CI_COMMIT_SHORT_SHA
  BUILD_TAG: $CI_COMMIT_REF_NAME


cache:
  key: shared-cache
  paths:
    - .cache/pip
    - .npm/
    - $HOME/.cache/pants/setup
    - $HOME/.cache/pants/named_caches
    - $HOME/.cache/pants/lmdb_store

.dist-artifacts: &dist-artifacts
  after_script:
    # list files
    - find dist
  artifacts:
    expire_in: 18h
    paths:
      - dist

flake8:
  stage: lint
  cache:
    key: shared-cache
  only:
    changes:
      - server/**/*
      - Dockerfile
      - BUILD
      - pants.*
  before_script:
    # bootstrap pants
    - ./pants --version
  script:
    - "./pants lint ::"
  after_script:
    - python -m pip install "flake8-junit-report"
    - python -m junit_conversor "dist/lint/flake8/report.txt" "junit.xml"
  artifacts:
    reports:
      junit: junit.xml

eslint:
  stage: lint
  image: node:latest
  only:
    changes:
      - app/**/*
  cache:
    key: shared-cache
  before_script:
    - cd app/
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run lint_junit
  artifacts:
    reports:
      junit: junit.xml

pytest:
  services:
    - name: redislabs/redismod:latest
      alias: redis
  stage: test
  only:
    changes:
      - server/**/*
      - Dockerfile
      - BUILD
      - pants.*
  cache:
    key: shared-cache
  needs: []
  before_script:
    # Bootstrap pants
    - ./pants --version
  script:
    - "./pants test ::"
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: always
    reports:
      junit: dist/coverage/python/coverage.xml

package:
  stage: build
  image: cimg/python:3.8
  cache:
    key: shared-cache
  services:
    - name: docker:dind
      alias: dockerdaemon
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://dockerdaemon:2375/
    DOCKER_TLS_CERTDIR: ""
  only:
    changes:
      - server/**/*
      - Dockerfile
      - BUILD
      - pants.*
  before_script:
    - ./pants --version
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - "./pants package Dockerfile"
    - "docker push $CI_REGISTRY_IMAGE/mapping-app:$BUILD_TAG"
