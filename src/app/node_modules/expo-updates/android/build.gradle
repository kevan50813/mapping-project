apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'

group = 'host.exp.exponent'
version = '0.10.15'

apply from: "../scripts/create-manifest-android.gradle"

buildscript {
  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion', '1.4.21')}")
  }
}

// Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

// Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

// Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: mavenLocal().url)
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 30)

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 30)
    versionCode 31
    versionName '0.10.15'
    consumerProguardFiles("proguard-rules.pro")
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    // uncomment below to export the database schema when making changes
    /* javaCompileOptions {
      annotationProcessorOptions {
        arguments += ["room.schemaLocation":
                      "$projectDir/src/androidTest/schemas".toString()]
      }
    } */
  }
  lintOptions {
    abortOnError false
  }
  testOptions {
    unitTests.includeAndroidResources = true
  }
  sourceSets {
    androidTest.assets.srcDirs += files("$projectDir/src/androidTest/schemas".toString())
  }
}

dependencies {
  implementation project(':expo-modules-core')
  implementation project(':expo-structured-headers')
  implementation project(':expo-updates-interface')
  implementation project(':expo-manifests')
  implementation project(':expo-json-utils')
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"

  def room_version = "2.1.0"

  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"

  implementation("com.squareup.okhttp3:okhttp:3.12.1")
  implementation("com.squareup.okhttp3:okhttp-urlconnection:3.12.1")
  implementation("com.squareup.okio:okio:1.15.0")
  implementation("commons-io:commons-io:2.6")
  implementation("org.apache.commons:commons-lang3:3.9")

  testImplementation 'junit:junit:4.12'
  testImplementation 'androidx.test:core:1.0.0'
  testImplementation 'org.mockito:mockito-core:1.10.19'
  testImplementation 'io.mockk:mockk:1.10.6'

  androidTestImplementation 'androidx.test:runner:1.1.0'
  androidTestImplementation 'androidx.test:core:1.0.0'
  androidTestImplementation 'androidx.test:rules:1.1.0'
  androidTestImplementation 'org.mockito:mockito-android:3.7.7'
  androidTestImplementation 'io.mockk:mockk-android:1.10.6'
  androidTestImplementation "androidx.room:room-testing:$room_version"

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.4.21')}"
}
repositories {
  mavenCentral()
}
